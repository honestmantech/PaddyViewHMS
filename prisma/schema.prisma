// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id            String    @id @default(cuid())
  name          String?
  email         String    @unique
  password      String
  role          Role      @default(STAFF)
  createdAt     DateTime  @default(now())
  updatedAt     DateTime  @updatedAt
  bookings      Booking[]
}

model Guest {
  id            String    @id @default(cuid())
  firstName     String
  lastName      String
  email         String    @unique
  phone         String?
  address       String?
  idNumber      String?
  idType        String?
  createdAt     DateTime  @default(now())
  updatedAt     DateTime  @updatedAt
  bookings      Booking[]
}

model Room {
  id            String    @id @default(cuid())
  roomNumber    String    @unique
  type          RoomType
  price         Float
  status        RoomStatus @default(AVAILABLE)
  capacity      Int
  amenities     String[]
  createdAt     DateTime  @default(now())
  updatedAt     DateTime  @updatedAt
  bookings      Booking[]
}

model Booking {
  id            String    @id @default(cuid())
  checkInDate   DateTime
  checkOutDate  DateTime
  status        BookingStatus @default(PENDING)
  totalAmount   Float
  paymentStatus PaymentStatus @default(UNPAID)
  specialRequests String?
  createdAt     DateTime  @default(now())
  updatedAt     DateTime  @updatedAt
  
  // Relations
  guestId       String
  guest         Guest     @relation(fields: [guestId], references: [id])
  roomId        String
  room          Room      @relation(fields: [roomId], references: [id])
  userId        String
  user          User      @relation(fields: [userId], references: [id])
}

enum Role {
  ADMIN
  MANAGER
  STAFF
}

enum RoomType {
  SINGLE
  DOUBLE
  TWIN
  SUITE
  DELUXE
}

enum RoomStatus {
  AVAILABLE
  OCCUPIED
  MAINTENANCE
  RESERVED
}

enum BookingStatus {
  PENDING
  CONFIRMED
  CHECKED_IN
  CHECKED_OUT
  CANCELLED
}

enum PaymentStatus {
  UNPAID
  PARTIALLY_PAID
  PAID
  REFUNDED
}

